CREATE DATABASE Minions

CREATE TABLE Minions(
Id INT PRIMARY KEY IDENTITY,
Name NVARCHAR(30) NOT NULL,
Age INT 
)

CREATE TABLE Towns(
Id INT PRIMARY KEY IDENTITY,
Name NVARCHAR(30) NOT NULL
)

ALTER TABLE Minions
ADD TownId INT CONSTRAINT FK_TownId_Towns FOREIGN KEY REFERENCES Towns(Id)

SET IDENTITY_INSERT Towns OFF


INSERT INTO Towns(Id, Name)
VALUES (1, 'Sofia'),
		(2, 'Plovdiv'),
		(3, 'Varna')

INSERT INTO Minions(Id, Name, Age, TownId)
VALUES(1, 'Kevin', 22, 1),
		(2, 'Bob', 15, 3),
		(3, 'Steward', NULL, 2)

SET IDENTITY_INSERT Minions ON

TRUNCATE TABLE Minions

DROP TABLE Minions
DROP TABLE Towns

CREATE TABLE People(
Id INT PRIMARY KEY IDENTITY,
Name NVARCHAR(200) NOT NULL,
Picture VARBINARY(2),
Height DECIMAL(15, 2),
Weight DECIMAL(15,2),
Gender NVARCHAR(10),
Birthdate DATETIME,
Biography TEXT,
)

ALTER TABLE People 
ADD CONSTRAINT CH_PictureSize CHECK(Picture <= 2 * 1024)

ALTER TABLE People
ADD CONSTRAINT CH_Gender CHECK(Gender in ('m', 'f')) 

INSERT INTO People(Name, Height, Weight, Gender, Birthdate, Biography)
VALUES('Gosho', 1.85, 77.43, 'm', CONVERT(VARCHAR,'01/02/2013'), 'dasdasdasd'),
		('Anka', 1.85, 77.43, 'f', CONVERT(VARCHAR,'01/02/1955'), 'dasdasdasd')

CREATE TABLE Users(
Id BIGINT PRIMARY KEY IDENTITY ,
Username VARCHAR(30) NOT NULL,
Password VARCHAR(26) NOT NULL,
ProfilePicture VARBINARY(2),
LastLoginTime DATETIME,
IsDeleted BIT
)

INSERT INTO Users(Username, Password, LastLoginTime, IsDeleted)
VALUES('Azis', 'Azisss',  CONVERT(VARCHAR,'08/05/2013'), 1),
		('Pesho', 'Peshoo',  CONVERT(VARCHAR,'01/02/2013'), 0)

ALTER TABLE Users
DROP [PK__Users__3214EC07857341E0]

ALTER TABLE Users
ADD CONSTRAINT PK_Users PRIMARY KEY (Id, Username)

ALTER TABLE Users
ADD CONSTRAINT CH_PasswordLength CHECK (DATALENGTH(Password) > 5)

ALTER TABLE Users
ADD DEFAULT GETDATE()
FOR LastLoginTime

INSERT INTO Users(Username, Password, IsDeleted)
VALUES('Azis1', 'Azisss', 1),
		('Pesho1', 'Peshoo', 0)

ALTER TABLE Users
DROP [PK_Users]

ALTER TABLE Users
ADD CONSTRAINT PK_Users PRIMARY KEY (Id)

ALTER TABLE Users
ADD CONSTRAINT CH_UsernameLength CHECK(DATALENGTH(Username) > 3)

DELETE FROM Users
WHERE Id = 3

CREATE DATABASE Movies

CREATE TABLE Directors(
Id INT PRIMARY KEY IDENTITY,
DirectorName NVARCHAR(50) NOT NULL,
Notes NVARCHAR(500)
)

CREATE TABLE Genres(
Id INT PRIMARY KEY IDENTITY,
GenreName NVARCHAR(50) NOT NULL,
Notes NVARCHAR(500)
)
		
CREATE TABLE Categories(
Id INT PRIMARY KEY IDENTITY,
CategoryName NVARCHAR(50) NOT NULL,
Notes NVARCHAR(500)
)

CREATE TABLE Movies(
Id INT PRIMARY KEY IDENTITY,
Title NVARCHAR(50) NOT NULL,
DirectorId INT FOREIGN KEY REFERENCES Directors(Id),
CopyrightYear DATETIME,
Length INT NOT NULL,
GenreId INT FOREIGN KEY REFERENCES Genres(Id),
CategoryId INT FOREIGN KEY REFERENCES Categories(Id),
Raiting INT,
Notes NVARCHAR(500)
)

INSERT INTO Categories(CategoryName, Notes)
VALUES('Scary', 'Scary movies'),
		('Funny', 'Funny movies')

INSERT INTO Directors(DirectorName, Notes)
VALUES ('Ivan', 'Info for Ivan find on internet'),
		('Gosho', 'Gosho directora')

INSERT INTO Genres(GenreName, Notes)
VALUES('Horror', 'Very scary movies :)'),
		('Comedy', 'Very funny movies :D')

ALTER TABLE Movies
ALTER COLUMN Length DECIMAL(15,2)

ALTER TABLE Movies
ADD CONSTRAINT CH_RaitingCheck CHECK (DATALENGTH(Length) <= 5 OR DATALENGTH(Length) >= 1)

INSERT INTO Movies(Title, DirectorId, CopyrightYear, Length, GenreId, CategoryId, Raiting, Notes)
VALUES('The Nun', 1, CONVERT(VARCHAR,'08/05/2013'), 93, 1, 1, 5, 'Great movie'),
		('Scary Movie', 2,  CONVERT(VARCHAR,'08/05/2013'), 98, 2, 2, 4, 'Funny movie')